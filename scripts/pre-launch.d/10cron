chown -R root: /data/report/
chmod a+x /data/report/


if [[ $LOCAL_ONLY == "1" ]]
then
    echo "Local only mode, will generate report on /data/raw_apollo.gff"
    /opt/apollo_checker/report_local.sh "${APOLLO_EXT_URL}" /data/genome.fa /data/report/
else

    # Update the report if not existing yet
    if [ ! -f /data/report/full_report.json ]; then
        wa_url=${APOLLO_URL%/} # Url of the Apollo server (trim trailing slash)

        # Check apollo is online
        echo "Trying to connect to apollo server"
        for ((i=0;i<40;i++))
        do
            APOLLO_ONLINE=$(curl --header "Content-Type:application/json" -d"{'username': '$APOLLO_USER', 'password': '$APOLLO_PASS'}" "$wa_url/organism/findAllOrganisms" >/dev/null 2>&1; echo "$?")
            if [[ $APOLLO_ONLINE -eq 0 ]]; then
                sleep 3
                break
            fi
            sleep 3
        done

        if ! [[ $APOLLO_ONLINE -eq 0 ]]; then
            echo "Cannot connect to apollo server"
            exit "${APOLLO_ONLINE}"
        fi

        # Generate report
        RES=$(curl --header "Content-Type:application/json" -d"{'username': '$APOLLO_USER', 'password': '$APOLLO_PASS'}" "$wa_url/organism/findAllOrganisms" 2> /dev/null)
        ORGS=$(echo $RES | wc -c)
        GREP_RESULT=1
        echo $RES | grep -q "Not authorized for any organisms" || GREP_RESULT=0
        if [[ $GREP_RESULT -eq 0 ]]; then
            if ! [[ $ORGS -eq 0 ]]; then
                /opt/apollo_checker/report.sh "${APOLLO_URL}" "${APOLLO_EXT_URL}" /data/genomes/ /data/report/
            else
                #Backward compatibility
                echo "No organism found on Apollo server, skipping report generation"
            fi
        else
            echo "No organism found on Apollo server, skipping report generation"
        fi
    fi

    echo "@daily    (bash -lc '/opt/apollo_checker/report.sh "${APOLLO_URL}" "${APOLLO_EXT_URL}" /data/genomes/ /data/report/ 2>> /var/log/apollo_report.log')" > cron
    crontab cron && rm cron

    service cron start
fi
